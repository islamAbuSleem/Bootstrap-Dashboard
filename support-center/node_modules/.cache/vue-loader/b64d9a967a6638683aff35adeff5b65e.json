{"remainingRequest":"D:\\courses\\Web_Design\\workspace\\support-center\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\courses\\Web_Design\\workspace\\support-center\\src\\components\\FAQ.vue?vue&type=style&index=0&id=f44d9bd4&lang=scss&scoped=true&","dependencies":[{"path":"D:\\courses\\Web_Design\\workspace\\support-center\\src\\components\\FAQ.vue","mtime":1582349838000},{"path":"D:\\courses\\Web_Design\\workspace\\support-center\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\courses\\Web_Design\\workspace\\support-center\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\courses\\Web_Design\\workspace\\support-center\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\courses\\Web_Design\\workspace\\support-center\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\courses\\Web_Design\\workspace\\support-center\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\courses\\Web_Design\\workspace\\support-center\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQpAaW1wb3J0ICIuLi9zdHlsZS9taXhpbnMuc2NzcyI7DQpAaW1wb3J0ICIuLi9zdHlsZS92YXJpYWJsZXMuc2NzcyI7DQouZmFxIHsNCiAgJiA+IGgyIHsNCiAgICBAaW5jbHVkZSBwcmVmaXgoInRleHQtc2hhZG93IiwgMnB4IDRweCAxMnB4ICMwNjgyZDA2Myk7DQogICAgY29sb3I6ICRiYXNlQ29sb3I7DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgIG1hcmdpbi1ib3R0b206IDIwcHg7DQogICAgcGFkZGluZzogMnB4IDE1cHg7DQogICAgZm9udC1zaXplOiAyOXB4Ow0KICB9DQogIC5lcnJvciB7DQogICAgcHAgew0KICAgICAgZm9udC1zaXplOiAyMHB4Ow0KICAgICAgY29sb3I6ICNmZjQ1NDU7DQogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjliNGJlOw0KICAgICAgcGFkZGluZzogMTVweDsNCiAgICAgIGJvcmRlci1yYWRpdXM6IDVweDsNCg0KICAgICAgaWkgew0KICAgICAgICBjb2xvcjogI2ZmZjsNCiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNDU0NTsNCiAgICAgICAgcGFkZGluZzogMTBweDsNCiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlOw0KICAgICAgICBoZWlnaHQ6IDdweCAhaW1wb3J0YW50Ow0KICAgICAgICBsaW5lLWhlaWdodDogOXB4Ow0KICAgICAgICBmb250LXNpemU6IDE4cHg7DQogICAgICB9DQogICAgfQ0KICB9DQogIC5saXN0IHsNCiAgICAucXVlc3Rpb24gew0KICAgICAgaDIgew0KICAgICAgICBjb2xvcjogIzQ0NDsNCiAgICAgIH0NCiAgICAgIHBwIHsNCiAgICAgICAgY29sb3I6ICM2NjY7DQogICAgICAgIGZvbnQtc2l6ZTogMThweDsNCiAgICAgIH0NCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["FAQ.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FAQ.vue","sourceRoot":"src/components","sourcesContent":["\r\n<template>\r\n  <main class=\"faq\">\r\n    <h2>Frenquently Asked Questions</h2>\r\n\r\n    <div class=\"error\" v-if=\"error\">\r\n      <p>\r\n        <i class=\"fa fa-exclamation\"></i> Can't Load The Questions\r\n      </p>\r\n    </div>\r\n    <section class=\"list\">\r\n      <article class=\"question\" v-for=\"question of questions\" :key=\"question.id\">\r\n        <h2 v-html=\"question.login\"></h2>\r\n        <p v-html=\"question.url\"></p>\r\n      </article>\r\n    </section>\r\n    <Loading v-if=\"loading\"></Loading>\r\n  </main>\r\n</template>\r\n\r\n<script>\r\nimport remoteData from '../mixins/RemoteData';\r\nexport default {\r\n  data() {\r\n    return {\r\n      questions: [],\r\n      error: null,\r\n      loading: false,\r\n    };\r\n  },\r\n  mixins:[\r\n    remoteData({\r\n      questionsList: 'questions'\r\n    }),\r\n  ],\r\n  async created() {\r\n    this.loading = true;\r\n    // fetch ('http://localhost:3000/questions').then(response => {\r\n    //     if(response.ok){\r\n    //         return response.json()\r\n    //     }else{\r\n    //         return promise.reject('error')\r\n    //     }\r\n    // }).then(result => {\r\n    //     // Result is the JSON parsed object from the server\r\n    //     this.questions = result;\r\n    // }).catch(e => {\r\n    //     this.error = e\r\n    // })\r\n    // We can rewrite this code using the async and await JavaScript keywords to\r\n    // make it look like sequential code:\r\n    // async created () {\r\n    try {\r\n      this.questions = await this.$fetch(\"orgs\");\r\n   \r\n    } catch (e) {\r\n      this.error = e;\r\n    }\r\n    this.loading = false;\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../style/mixins.scss\";\r\n@import \"../style/variables.scss\";\r\n.faq {\r\n  & > h2 {\r\n    @include prefix(\"text-shadow\", 2px 4px 12px #0682d063);\r\n    color: $baseColor;\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n    padding: 2px 15px;\r\n    font-size: 29px;\r\n  }\r\n  .error {\r\n    pp {\r\n      font-size: 20px;\r\n      color: #ff4545;\r\n      background-color: #f9b4be;\r\n      padding: 15px;\r\n      border-radius: 5px;\r\n\r\n      ii {\r\n        color: #fff;\r\n        background-color: #ff4545;\r\n        padding: 10px;\r\n        border-radius: 50%;\r\n        height: 7px !important;\r\n        line-height: 9px;\r\n        font-size: 18px;\r\n      }\r\n    }\r\n  }\r\n  .list {\r\n    .question {\r\n      h2 {\r\n        color: #444;\r\n      }\r\n      pp {\r\n        color: #666;\r\n        font-size: 18px;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>"]}]}